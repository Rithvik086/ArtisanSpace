<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Cart</title>
  <link rel="stylesheet" href="/navbar2.css" />
  <link rel="stylesheet" href="/customer/customerCart.css" />
  <link rel="stylesheet" href="/footer.css" />
</head>

<body>
  <%- include('../partials/navbar2', { role }) %>
  <main>
    <div class="button-box">
      <button id="cartBtn">Cart</button>
      <button id="historyBtn">Product History</button>
    </div>
    <div id="contentBox">
    </div>
  </main>
  <%- include("../partials/footer") %>
  <script>
    document.addEventListener("DOMContentLoaded", refreshCart);

    async function updateCart(userId, productId, action, amount) {
      try {
        const response = await fetch(
          `/customer/cart?userId=${userId}&productId=${productId}&action=${action}&amount=${amount}`, {
            method: "POST",
          }
        );
        const data = await response.json();
        console.log(data.message);
        if (data.success) {
          showNotification(data.message, "success");

        } else {
          showNotification(data.message || "Failed to Add. Try Again", "error")
        }

        refreshCart();
      } catch (error) {
        console.error("Error updating cart:", error);
      }
    }

    async function refreshCart() {
      try {
        const response = await fetch("/customer/cart", {
          headers: {
            "X-Requested-With": "XMLHttpRequest",
          },
        });
        const html = await response.text();
        document.getElementById("contentBox").innerHTML = html;

        attachQuantityListeners();

        const cartItems = document.querySelectorAll(".cart-item");
        if (cartItems.length > 0) {
          if (!document.getElementById("checkoutBtn")) {
            const checkoutButton = document.createElement("button");
            checkoutButton.textContent = "Proceed to Checkout";
            checkoutButton.id = "checkoutBtn";
            checkoutButton.className = "checkout-button"; // Add styling class
            checkoutButton.addEventListener("click", () => {
              window.location.href = "/customer/checkout";
            });
            document
              .getElementById("contentBox")
              .appendChild(checkoutButton);
          }
        }
      } catch (error) {
        console.error("Error refreshing cart:", error);
      }
    }



    function attachQuantityListeners() {
      document.querySelectorAll(".quantity-input").forEach(input => {
        input.addEventListener("change", async function() {

          let productId = this.id;
          let newQuantity = this.value;

          if (newQuantity < 1) {
            this.value = 1;
            newQuantity = 1;
          }
          await updateCart('<%= userId %>', productId, "none", newQuantity);

        });
      });
    }



    function loadHistory() {
      document.getElementById("contentBox").innerHTML = `
  <div id="historyBox" class="box">
    <h3>Product History</h3>
    <div class="products">
      <div class="history-item">
        <img src="/images/Aboutus/3.png" alt="Product 1" class="product-img">
        <div class="product-details">
          <h3>Product 1</h3>
          <p>Order Date: 2024-03-01</p>
          <p>Delivery Status: <b>Delivered</b></p>
          <p>Last Modified: 2024-03-02</p>
          <p>Address: 123 Street, City</p>
        </div>
      </div>

      <div class="history-item">
        <img src="/images/Aboutus/4.png" alt="Product 2" class="product-img">
        <div class="product-details">
          <h3>Product 2</h3>
          <p>Order Date: 2024-02-28</p>
          <p>Delivery Status: <b>In Transit</b></p>
          <p>Last Modified: 2024-03-05</p>
          <p>Address: 456 Avenue, City</p>
        </div>
      </div>

      <div class="history-item">
        <img src="/images/Aboutus/8.png" alt="Product 3" class="product-img">
        <div class="product-details">
          <h3>Product 3</h3>
          <p>Order Date: 2024-02-25</p>
          <p>Delivery Status: <b>Pending</b></p>
          <p>Last Modified: Not Yet</p>
          <p>Address: 789 Road, City</p>
        </div>
      </div>
    </div>
  </div>
  `;
    }

    document.getElementById("cartBtn").addEventListener("click", refreshCart);
    document
      .getElementById("historyBtn")
      .addEventListener("click", loadHistory);

    function showNotification(message, type) {
      console.log("Showing notification:", message, type);
      let notificationContainer = document.querySelector(".notification-container")

      if (!notificationContainer) {
        notificationContainer = document.createElement("div")
        notificationContainer.className = "notification-container"
        document.body.appendChild(notificationContainer)
      }

      // Avoid duplicate notifications of the same message
      if ([...notificationContainer.children].some(n => n.textContent === message)) {
        return;
      }

      const notification = document.createElement("div")
      notification.className = `notification ${type}`
      notification.textContent = message

      notificationContainer.appendChild(notification)

      setTimeout(() => {
        notification.classList.add("fade-out")
        setTimeout(() => {
          notification.remove()
        }, 500)
      }, 3000)
    }


    if (!document.querySelector("#notification-style")) {
      const style = document.createElement("style")
      style.id = "notification-style"
      style.textContent = `
    .notification-container {
      position: fixed;
      top: 20px;
      right: 40px;
      z-index: 1000;
    }
    
    .notification {
      padding: 12px 20px;
      margin-bottom: 10px;
      border-radius: 4px;
      color: white;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      animation: slide-in 0.3s ease-out forwards;
    }
    
    .notification.success {
      background-color: #28a745;
    }
    
    .notification.error {
      background-color: #dc3545;
    }
    
    .notification.fade-out {
      animation: fade-out 0.5s ease-out forwards;
    }
    
    @keyframes slide-in {
      from { transform: translateX(100%); opacity: 0; }
      to { transform: translateX(0); opacity: 1; }
    }
    
    @keyframes fade-out {
      from { opacity: 1; }
      to { opacity: 0; }
    }
  `
      document.head.appendChild(style)
    }
  </script>
</body>

</html>