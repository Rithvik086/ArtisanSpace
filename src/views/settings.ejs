<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Listings</title>
  <link rel="stylesheet" href="/navbar2.css" />
  <link rel="stylesheet" href="/footer.css" />
  <style>
    .container {
            max-width: 800px;
            margin: 40px auto;
            background:#e4d9d4;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .header {
            background: #5c4033;
            color: white;
            padding: 20px 30px;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
        }

        .header h1 {
            font-size: 24px;
            font-weight: 500;
        }

        .tabs {
            display: flex;
            border-bottom: 1px solid #eee;
            position: relative;
        }

        .tab {
            padding: 15px 30px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
            color: #bd8267;
            position: relative;
        }

        .tab:hover {
            color: #5c4033;
            background-color: #f9f9f9;
        }

        .tab.active {
            color: #bd8267;
            border-bottom: 2px solid#bd8267;
        }

        .tab-content {
            padding: 30px;
            display: none;
            animation: fadeIn 0.5s ease;
        }

        .tab-content.active {
            display: block;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .form-group {
            margin-bottom: 20px;
            position: relative;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #555;
        }

        .form-control {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
            transition: border 0.3s ease;
            background-color: #f9f9f9;
        }

        .form-control:disabled {
            background-color: #f5f5f5;
            cursor: not-allowed;
        }

        .form-control:focus {
            border-color: #3498db;
            outline: none;
            box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);
        }

        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background-color: #5c4033;
            color: white;
        }

        .btn-primary:hover {
            background-color:#bd8267;
        }

        .btn-edit {
            position: absolute;
            right: 0;
            top: 35px;
        }

        .address-form {
            position: relative;
        }

        .address-save-btn {
            display: block;
            margin-top: 20px;
            background-color:#5c4033;
            color: white;
        }

        .address-save-btn:hover {
            background-color: #bd8267;
        }

        .address-edit-btn {
            position: absolute;
            right: 0;
            top: 0;
        }

        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: #333;
            color: white;
            padding: 15px 25px;
            border-radius: 4px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            display: none;
            z-index: 1000;
            animation: slideIn 0.3s ease forwards;
        }

        .toast.success {
            background: #2ecc71;
        }

        .toast.error {
            background: #e74c3c;
        }

        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        @keyframes slideOut {
            from { transform: translateX(0); opacity: 1; }
            to { transform: translateX(100%); opacity: 0; }
        }

        .logout-content {
            text-align: center;
            padding: 40px 0;
        }

        .logout-icon {
            font-size: 64px;
            color: #e74c3c;
            margin-bottom: 20px;
        }

        .logout-btn {
            background-color: #e74c3c;
            color: white;
            padding: 12px 30px;
            font-size: 16px;
            margin-top: 20px;
        }

        .logout-btn:hover {
            background-color: #c0392b;
        }
  </style>
</head>

<body>



<body>
  <%- include ('/partials/navbar2'), {role} %>
  <div class="container">
    <div class="header">
        <h1>Settings</h1>
    </div>
    
    <div class="tabs">
        <div class="tab active" data-tab="profile">Profile</div>
        <div class="tab" data-tab="address">Address</div>
        <div class="tab" data-tab="logout">Logout</div>
    </div>
    
    <div class="tab-content active" id="profile">
        <div class="form-group">
            <label for="name">Full Name</label>
            <input type="text" id="name" class="form-control" disabled>
            <button class="btn btn-primary btn-edit" data-field="name">Edit</button>
        </div>
        
        <div class="form-group">
            <label for="email">Email Address</label>
            <input type="email" id="email" class="form-control" disabled>
            <button class="btn btn-primary btn-edit" data-field="email">Edit</button>
        </div>
        
        <div class="form-group">
            <label for="phone">Phone Number</label>
            <input type="tel" id="phone" class="form-control" disabled>
            <button class="btn btn-primary btn-edit" data-field="phone">Edit</button>
        </div>
        
        <div class="form-group">
            <label for="username">Username</label>
            <input type="text" id="username" class="form-control" disabled>
            <button class="btn btn-primary btn-edit" data-field="username">Edit</button>
        </div>
    </div>
    
    <div class="tab-content" id="address">
        <div class="address-form">
            <button  class="btn" id="editAddressBtn">Edit</button>
            <div class="form-group">
                <label for="addressLine1">Address Line 1</label>
                <input type="text" id="addressLine1" class="form-control" disabled>
            </div>
            
            <div class="form-group">
                <label for="addressLine2">Address Line 2</label>
                <input type="text" id="addressLine2" class="form-control" disabled>
            </div>
            
            <div class="form-group">
                <label for="city">City</label>
                <input type="text" id="city" class="form-control" disabled>
            </div>
            
            <div class="form-group">
                <label for="state">State / Province</label>
                <input type="text" id="state" class="form-control" disabled>
            </div>
            
            <div class="form-group">
                <label for="zipCode">Zip / Postal Code</label>
                <input type="text" id="zipCode" class="form-control" disabled>
            </div>
            
            <div class="form-group">
                <label for="country">Country</label>
                <input type="text" id="country" class="form-control" disabled>
            </div>
            
            <button class="btn address-save-btn" id="saveAddressBtn" style="display: none;">Save Address</button>
        </div>
    </div>
    
    <div class="tab-content" id="logout">
        <div class="logout-content">
            <div class="logout-icon">ðŸ”’ghjkl</div>
            <h2>Ready to log out?</h2>
            <p>You will be redirected to the login page.</p>
            <button class="btn logout-btn">Log out now</button>
        </div>
    </div>
</div>

<div class="toast" id="toast"></div>

  <%- include ('../partials/footer') %>

  <script>const userData = {
    profile: {
        name: "John Doe",
        email: "john.doe@example.com",
        phone: "+1 (555) 123-4567",
        username: "johndoe123"
    },
    address: {
        addressLine1: "123 Main Street",
        addressLine2: "Apt 4B",
        city: "New York",
        state: "NY",
        zipCode: "10001",
        country: "United States"
    }
};

// DOM elements
const tabs = document.querySelectorAll('.tab');
const tabContents = document.querySelectorAll('.tab-content');
const editButtons = document.querySelectorAll('.btn-edit');
const editAddressBtn = document.getElementById('editAddressBtn');
const saveAddressBtn = document.getElementById('saveAddressBtn');
const logoutButton = document.querySelector('.logout-btn');
const toast = document.getElementById('toast');
const addressFieldsData = ['addressLine1', 'addressLine2', 'city', 'state', 'zipCode', 'country'];
const addressFields =document.querySelectorAll(".form-control")

// Load user data
document.addEventListener('DOMContentLoaded', function() {
    // Load profile data
    document.getElementById('name').value = userData.profile.name;
    document.getElementById('email').value = userData.profile.email;
    document.getElementById('phone').value = userData.profile.phone;
    document.getElementById('username').value = userData.profile.username;
    
    // Load address data
    addressFieldsData.forEach(field => {
        document.getElementById(field).value = userData.address[field];
    });
});

// Tab switching
tabs.forEach(tab => {
    tab.addEventListener('click', function() {
        const tabId = tab.getAttribute('data-tab');

        if (tabId === 'logout') {
            handleLogout();
            return;
        }

        tabs.forEach(t => t.classList.remove('active'));
        tabContents.forEach(content => content.classList.remove('active'));

        tab.classList.add('active');
        document.getElementById(tabId).classList.add('active');
    });
});

// Profile edit/save functionality
editButtons.forEach(button => {
    button.addEventListener('click', function() {
        const fieldId = button.getAttribute('data-field');
        const field = document.getElementById(fieldId);

        if (field.disabled) {
            field.disabled = false;
            field.focus();
            button.textContent = 'Save';
            field.style.backgroundColor = 'white';
        } else {
            field.disabled = true;
            button.textContent = 'Edit';
            field.style.backgroundColor = '#f5f5f5';
            saveProfileData(fieldId, field.value);
        }
    });
});

// Address edit functionality
editAddressBtn.addEventListener('click', function() {
  console.log(addressFields.disabled)
    addressFields.forEach(field => {
        field.disabled = false;
        field.style.backgroundColor = 'white';
    });

    editAddressBtn.style.display = 'none';
    saveAddressBtn.style.display = 'block';
});

// Save address functionality
saveAddressBtn.addEventListener('click', function() {
    const newAddress = {};

    addressFields.forEach(field => {
        newAddress[field] = field.value;
        field.disabled = true;
        field.style.backgroundColor = '#f5f5f5';
    });

    saveAddressBtn.style.display = 'none';
    editAddressBtn.style.display = 'block';

    saveAddressData(newAddress);
});

// Logout functionality
function handleLogout() {
    showToast('Logging out...', 'success');

    setTimeout(() => {
        window.location.href = "#";
        alert("You have been logged out.");
        tabs.forEach(t => t.classList.remove('active'));
        tabContents.forEach(content => content.classList.remove('active'));
        tabs[0].classList.add('active');
        tabContents[0].classList.add('active');
    }, 1500);
}

// Save profile data (simulation)
function saveProfileData(field, value) {
    showToast('Saving profile changes...', 'success');

    setTimeout(() => {
        userData.profile[field] = value;
        showToast('Profile updated successfully!', 'success');
    }, 1000);
}

// Save address data (simulation)
function saveAddressData(addressData) {
    showToast('Saving address changes...', 'success');

    setTimeout(() => {
        for (const field in addressData) {
            userData.address[field] = addressData[field];
        }
        showToast('Address updated successfully!', 'success');
    }, 1000);
}

// Toast notification function
function showToast(message, type = 'success') {
    toast.textContent = message;
    toast.className = 'toast ' + type;
    toast.style.display = 'block';

    setTimeout(() => {
        toast.style.animation = 'slideOut 0.3s ease forwards';
        setTimeout(() => {
            toast.style.display = 'none';
            toast.style.animation = '';
        }, 300);
    }, 3000);
}

   
  </script>
</body>

</html>