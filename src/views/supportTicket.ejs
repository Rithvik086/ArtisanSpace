<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Support Ticket Form</title>
  <link rel="stylesheet" href="/navbar2.css" />

  <link rel="stylesheet" href="/footer.css">
  <link rel="stylesheet" href="/supportTicket.css">
  <style>
    .error-input {
      border: 1px solid red !important;
    }

    .error-message {
      color: red;
      font-size: 14px;
      margin: 5px 0 0;
    }
  </style>
</head>

<body>
  <%- include("partials/navbar2") %>
  <main>
    <div class="page-title">
      <h1>Submit a Support Ticket</h1>
      <p>Let us know how we can help you</p>
    </div>

    <div class="form-container">
      <form id="supportForm" class="form">
        <div class="form-group">
          <label for="subject" class="required">Subject</label>
          <input type="text" id="subject" name="subject" placeholder="Enter the subject of your inquiry" required>
          <p id="subjectError" style="color: red; font-size: 14px; margin: 5px 0 0; display: none;">
            Subject is required and must be at least 5 characters long, and cannot exceed 40 characters
          </p>
        </div>

        <div class="form-group">
          <label for="category">Category</label>
          <select id="category" name="category">
            <option value="">Select a category</option>
            <option value="technical">Technical Issue</option>
            <option value="billing">Billing Question</option>
            <option value="account">Account Management</option>
            <option value="product">Product Inquiry</option>
            <option value="other">Other</option>
          </select>
        </div>

        <div class="form-group">
          <label for="description" class="required">Description</label>
          <textarea id="description" name="description" placeholder="Please provide details about your issue or question" required></textarea>
          <p id="descriptionError" style="color: red; font-size: 14px; margin: 5px 0 0; display: none;">
            Description is required, must be at least 10 characters long, and cannot exceed 500 characters
          </p>
        </div>

        <button type="submit">Submit Ticket</button>
        <div id="status-message"></div>
      </form>
    </div>

  </main>
  <%- include("partials/footer",{role}) %>

  <script>
    const subjectInput = document.getElementById('subject');
    const descriptionInput = document.getElementById('description');
    const subjectError = document.getElementById('subjectError');
    const descriptionError = document.getElementById('descriptionError');

    const subjectRegex = /^[a-zA-Z0-9\s.,'"\-!?()]{5,40}$/;
    const descriptionRegex = /^[a-zA-Z0-9\s.,'"\-!?()]{10,500}$/;

    document.getElementById('supportForm').addEventListener('submit', async function(e) {
      e.preventDefault();

      if (!subjectRegex.test(subjectInput.value)) {
        subjectInput.classList.add('error-input');
        subjectError.style.display = 'block';
        return;
      } else {
        subjectInput.classList.remove('error-input');
        subjectError.style.display = 'none';
      }

      if (!descriptionRegex.test(descriptionInput.value)) {
        descriptionInput.classList.add('error-input');
        descriptionError.style.display = 'block';
        return;
      } else {
        descriptionInput.classList.remove('error-input');
        descriptionError.style.display = 'none';
      }

      const formData = new FormData(this);
      const formValues = Object.fromEntries(formData.entries());

      try {
        const response = await fetch('/submit-ticket', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formValues)
        });

        const result = await response.json();

        const statusMessage = document.getElementById('status-message');
        statusMessage.innerText = result.message;
        statusMessage.classList.add(result.success ? 'success' : 'error');
        statusMessage.style.display = 'block';

        if (result.success) {
          setTimeout(() => {
            this.reset();
            statusMessage.style.display = 'none';
          }, 3000);
        }
      } catch (error) {
        console.error('Error submitting ticket:', error);
      }
    });
  </script>
</body>

</html>