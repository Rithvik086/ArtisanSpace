<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Listings</title>
  <link rel="stylesheet" href="/navbar2.css" />
  <link rel="stylesheet" href="/footer.css" />
  <link rel="stylesheet" href="/artisan/listings.css">
  <style>
    .error-input {
      border: 1px solid red !important;
    }

    .error-message {
      color: red;
      font-size: 14px;
      margin: 5px 0 0;
    }
  </style>
</head>

<body>
  <%- include ('../partials/navbar2'), {role} %>
  <main>
    <div class="page-title">
      <h1>Add New Product</h1>
      <p>Enter the details of your product to add it to the inventory</p>
    </div>

    <div class="form-container">
      <form id="product-form" class="form" action="/artisan/listings" method="post" enctype="multipart/form-data">
        <div class="form-row">
          <div class="form-group">
            <label for="product-name">Product Name</label>
            <input type="text" id="product-name" name="productName" placeholder="Enter product name" required />
            <p id="productNameError" style="color: red; font-size: 14px; margin: 5px 0 0; display: none;">
              Product name must only contain letters, numbers, spaces, and hyphens, and be between 3 and 30 characters long.
            </p>
          </div>
        </div>
        <div class="form-group">
          <label for="product-type">Product Type</label>
          <select name="type" required>
            <option disabled selected value> Select product type</option>
            <option value="statue">Statue</option>
            <option value="painting">Painting</option>
            <option value="footware">Footware</option>
            <option value="pottery">Pottery</option>
            <option value="toys">Toys</option>
            <option value="other">Other</option>
          </select>
        </div>

        <div class="form-group">
          <label for="original-price">Price</label>
          <input type="number" id="original-price" name="price" step=".01" placeholder="Enter price" required />
          <p id="originalPriceError" style="color: red; font-size: 14px; margin: 5px 0 0; display: none;">
            Price must be a valid number with up to two decimal places
          </p>
        </div>


        <div class="form-group">
          <label for="product-photo">Product Photo</label>
          <input type="file" id="product-photo" name="image" accept="image/*" required />
          <div id="image-preview" class="image-preview"></div>
        </div>

        <div class="form-group">
          <label for="description">Description</label>
          <textarea id="description" name="description" placeholder="Enter a detailed description of the product, highlighting key features and benefits" required></textarea>
          <p id="descriptionError" style="color: red; font-size: 14px; margin: 5px 0 0; display: none;">
            Description must be between 10 and 500 characters and only contain letters, numbers, spaces, and basic punctuation.
          </p>
        </div>

        <div class="form-row">
          <div class="form-group">
            <label for="quantity">Quantity</label>
            <input type="number" id="quantity" name="quantity" min="0" placeholder="Enter quantity in stock" required />
            <p id="quantityError" style="color: red; font-size: 14px; margin: 5px 0 0; display: none;">
              Quantity must be a positive integer greater than 0
            </p>
          </div>
        </div>

        <button type="submit">Add Product</button>
        <div id="status-message"></div>
      </form>
    </div>
  </main>
  <%- include ('../partials/footer') %>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const productName = document.getElementById('product-name');
      const productType = document.getElementById('product-type');
      const originalPrice = document.getElementById('original-price');
      const description = document.getElementById('description');
      const quantity = document.getElementById('quantity');
      const productPhoto = document.getElementById('product-photo');
      const imagePreview = document.getElementById('image-preview');

      const productNameregex = /^[a-zA-Z0-9\s-]+$/;
      const originalPriceregex = /^\d+(\.\d{1,2})?$/;
      const descriptionregex = /^[a-zA-Z0-9\s.,'"\-!?()]+$/;
      const quantityregex = /^[1-9][0-9]*$/;

      // Handle image preview
      productPhoto.addEventListener('change', function(event) {
        const file = event.target.files[0];
        if (file) {
          const reader = new FileReader();
          reader.onload = function(e) {
            imagePreview.innerHTML = `<img src="${e.target.result}" alt="Product preview">`;
          };
          reader.readAsDataURL(file);
        } else {
          imagePreview.innerHTML = '';
        }
      });

      // Handle form submission
      document.getElementById("product-form").addEventListener("submit", async function(event) {
        event.preventDefault();

        // Reset previous error states
        productName.classList.remove('error-input');
        document.getElementById('productNameError').style.display = "none";
        originalPrice.classList.remove('error-input');
        document.getElementById('originalPriceError').style.display = "none";
        description.classList.remove('error-input');
        document.getElementById('descriptionError').style.display = "none";
        quantity.classList.remove('error-input');
        document.getElementById('quantityError').style.display = "none";

        // Validate product name
        if (!productNameregex.test(productName.value) || productName.value.length < 3 || productName.value.length > 30) {
          document.getElementById('productNameError').style.display = "block";
          productName.classList.add('error-input');
          productName.scrollIntoView({
            behavior: 'smooth',
            block: 'center'
          });
          return;
        }
        if (!originalPriceregex.test(originalPrice.value)) {
          document.getElementById('originalPriceError').style.display = "block";
          originalPrice.classList.add('error-input');
          originalPrice.scrollIntoView({
            behavior: 'smooth',
            block: 'center'
          });
          return;
        }
        if (!descriptionregex.test(description.value) || description.value.length < 10 || description.value.length > 500) {
          document.getElementById('descriptionError').style.display = "block";
          description.classList.add('error-input');
          description.scrollIntoView({
            behavior: 'smooth',
            block: 'center'
          });
          return;
        }
        if (!quantityregex.test(quantity.value)) {
          document.getElementById('quantityError').style.display = "block";
          quantity.classList.add('error-input');
          quantity.scrollIntoView({
            behavior: 'smooth',
            block: 'center'
          });
          return;
        }

        const inputs = this.querySelectorAll("input");
        const formData = new FormData(this);
        const statusMessage = document.getElementById("status-message");

        inputs.forEach(input => {
          if (input.type !== "file") {
            input.value = input.value.trim();
          }
        })

        try {
          const response = await fetch(this.action, {
            method: "POST",
            body: formData
          });

          if (response.ok) {
            statusMessage.innerText = "Product successfully added!";
            statusMessage.classList.add("success");
            statusMessage.style.display = "block";


            setTimeout(() => {
              window.location.href = "/artisan/";
            }, 2000);
          } else {
            throw new Error("Failed to add product. Please try again.");
          }
        } catch (error) {
          console.error("Error:", error);
          statusMessage.innerText = "Error: " + error.message;
          statusMessage.classList.add("error");
          statusMessage.style.display = "block";
        }
      });
    });
  </script>
</body>

</html>