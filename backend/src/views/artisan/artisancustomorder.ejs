<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Custom Orders</title>
  <link rel="stylesheet" href="/navbar2.css" />
  <link rel="stylesheet" href="/footer.css" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f8f4ef;
      color: #333;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    main {
      padding: 30px 0;
    }

    .container {
      max-width: 1280px;
      margin: 0 auto;
    }

    .section-title {
      position: relative;
      padding-bottom: 15px;
      margin-bottom: 35px;
      font-weight: 600;
      color: #6b4226;
    }

    .section-title:after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 80px;
      height: 4px;
      background: linear-gradient(to right, #9c6644, #d2a37c);
      border-radius: 2px;
    }

    .table-responsive {
      margin-bottom: 50px;
      border-radius: 12px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
      overflow: hidden;
    }

    .table {
      margin-bottom: 0;
    }

    .table thead th {
      border-top: none;
      background-color: #f9f5f0;
      font-weight: 600;
      text-transform: uppercase;
      font-size: 0.85rem;
      letter-spacing: 0.5px;
      padding: 16px 15px;
      color: #6b4226;
    }

    .table thead.table-success th {
      background-color: rgba(156, 102, 68, 0.1);
      color: #6b4226;
      border-bottom: 2px solid rgba(156, 102, 68, 0.2);
    }

    .table thead.table-light th {
      background-color: rgba(156, 102, 68, 0.1);
      color: #6b4226;
      border-bottom: 2px solid rgba(156, 102, 68, 0.2);
    }

    .table td {
      padding: 20px 15px;
      vertical-align: middle;
    }

    .table img {
      width: 90px;
      height: 90px;
      object-fit: cover;
      border-radius: 8px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .table img:hover {
      transform: scale(1.05);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }

    .badge-budget {
      font-size: 0.9rem;
      background-color: #9c6644;
      color: white;
      padding: 6px 12px;
      border-radius: 20px;
      font-weight: 500;
    }

    .badge-date {
      font-size: 0.85rem;
      background-color: #d2a37c;
      color: white;
      padding: 6px 12px;
      border-radius: 20px;
      font-weight: 500;
    }

    .empty-state {
      padding: 60px 40px;
      text-align: center;
      background-color: #fff;
      border-radius: 12px;
      margin-bottom: 50px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
      border: 1px dashed #d2a37c;
    }

    .empty-state h4 {
      color: #6b4226;
      margin-bottom: 15px;
      font-weight: 600;
    }

    .empty-state p {
      color: #9c6644;
      max-width: 500px;
      margin: 0 auto;
    }

    .table-striped tbody tr:nth-of-type(odd) {
      background-color: rgba(210, 163, 124, 0.05);
    }

    .table-hover tbody tr:hover {
      background-color: rgba(156, 102, 68, 0.05);
      transition: background-color 0.2s ease;
    }

    .action-buttons {
      display: flex;
      flex-direction: column;
      gap: 8px;
    }

    .action-buttons .btn {
      width: 100%;
      padding: 8px 12px;
      font-weight: 500;
      transition: all 0.3s ease;
    }

    .btn-outline-success {
      border-color: #9c6644;
      color: #9c6644;
      border-width: 2px;
    }

    .btn-outline-success:hover {
      background-color: #9c6644;
      color: white;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(156, 102, 68, 0.2);
    }

    .btn-primary {
      background: #9c6644;
      border: none;
    }

    .btn-primary:hover {
      background: #6b4226;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(156, 102, 68, 0.3);
    }

    .action-buttons .horizontal-buttons {
      display: flex;
      gap: 8px;
    }

    .action-buttons .horizontal-buttons .btn {
      flex: 1;
    }

    .truncate-description {
      max-width: 200px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      color: #6b4226;
    }

    /* Responsive adjustments */
    @media (max-width: 992px) {
      .table-responsive {
        overflow-x: auto;
      }
      
      .truncate-description {
        max-width: 150px;
      }
    }

    @media (max-width: 768px) {
      .section-title {
        font-size: 1.5rem;
      }
      
      .truncate-description {
        max-width: 100px;
      }
      
      .table img {
        width: 70px;
        height: 70px;
      }
    }
  </style>
</head>

<body>
  <%- include('../partials/navbar2', { role }) %>
  <main>
    <div class="container py-5">

      <!-- Available Custom Requests Section -->
      <h2 class="section-title">Available Custom Requests</h2>
      <% if (availableRequests && availableRequests.length > 0) { %>
      <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
          <thead class="table-light">
            <tr>
              <th>Image</th>
              <th>Title</th>
              <th>Type</th>
              <th>Description</th>
              <th>Budget</th>
              <th>Required By</th>
              <th>Requested By</th>
              <th style="min-width: 160px;">Action</th>
            </tr>
          </thead>
          <tbody>
            <% availableRequests.forEach(request => { %>
            <tr>
              <td>
                <img src="<%= request.image %>" alt="<%= request.title %>" class="img-thumbnail">
              </td>
              <td><%= request.title %></td>
              <td><%= request.type %></td>
              <td class="truncate-description" title="<%= request.description %>"><%= request.description %></td>
              <td><span class="badge badge-budget">₹<%= request.budget %></span></td>
              <td><span class="badge badge-date"><%= request.requiredBy %></span></td>
              <td><%= request.userId.username || 'Unknown User' %></td>
              <td>
                <div class="action-buttons">
                  <form id="requestForm-<%= request._id.toString() %>" class="request-form" style="width: 100%;">
                    <input type="hidden" name="requestId" value="<%= request._id.toString() %>">
                    <input type="hidden" name="artisanId" value="<%= currentArtisanId %>">
                    <button type="submit" class="btn btn-primary">Accept Request</button>
                  </form>
                </div>
              </td>
            </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
      <% } else { %>
      <div class="empty-state">
        <h4>No available custom requests at the moment</h4>
        <p class="text-muted">Check back later for new requests from customers.</p>
      </div>
      <% } %>

      <!-- Accepted Orders Section -->
      <h2 class="section-title">Your Accepted Orders</h2>
      <% if (acceptedRequests && acceptedRequests.length > 0) { %>
      <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
          <thead class="table-success">
            <tr>
              <th>Image</th>
              <th>Title</th>
              <th>Type</th>
              <th>Description</th>
              <th>Budget</th>
              <th>Required</th>
              <th>Customer</th>
              <th>Contact Details</th>
              <th style="min-width: 160px;">Action</th>
            </tr>
          </thead>
          <tbody>
            <% acceptedRequests.forEach(request => { %>
            <tr>
              <td>
                <img src="<%= request.image %>" alt="<%= request.title %>" class="img-thumbnail">
              </td>
              <td><%= request.title %></td>
              <td><%= request.type %></td>
              <td class="truncate-description" title="<%= request.description %>"><%= request.description %></td>
              <td><span class="badge badge-budget">₹<%= request.budget %></span></td>
              <td><span class="badge badge-date"><%= request.requiredBy %></span></td>
              <td><%= request.userId.username || 'Unknown User' %></td>
              <td><%= request.userId.email || 'No Email' %> | <%= request.userId.mobile_no || 'No Phone' %></td>
              <td>
                <div class="action-buttons">
                  <a href="/artisan/customrequests/<%= request._id.toString() %>" class="btn btn-outline-success complete-btn">Mark as Completed</a>
                </div>
              </td>
            </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
      <% } else { %>
      <div class="empty-state">
        <h4>You haven't accepted any orders yet</h4>
        <p class="text-muted">Accept custom requests from the section above to see them here.</p>
      </div>
      <% } %>
    </div>
  </main>

  <%- include("../partials/footer") %>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const requestForms = document.querySelectorAll('.request-form');

      requestForms.forEach(form => {
        form.addEventListener('submit', function(e) {
          e.preventDefault();

          const formData = new FormData(this);
          const requestId = formData.get('requestId');
          const artisanId = formData.get('artisanId');

          const data = {
            requestId: requestId,
            artisanId: artisanId
          };

          const submitBtn = this.querySelector('button[type="submit"]');
          const originalBtnText = submitBtn.innerHTML;
          submitBtn.innerHTML = 'Processing...';
          submitBtn.disabled = true;

          fetch('/artisan/customrequests', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(data)
            })
            .then(response => {
              if (response.ok) {
                window.location.reload();
              } else {
                submitBtn.innerHTML = originalBtnText;
                submitBtn.disabled = false;
                alert('Failed to accept the request. Please try again.');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              submitBtn.innerHTML = originalBtnText;
              submitBtn.disabled = false;
              alert('An error occurred. Please try again.');
            });
        });
      });

      const completeButtons = document.querySelectorAll('.complete-btn');

      completeButtons.forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();

          const url = this.getAttribute('href');
          const originalBtnText = this.innerHTML;
          this.innerHTML = 'Processing...';
          this.disabled = true;

          fetch(url, {
              method: 'GET',
              headers: {
                'Content-Type': 'application/json'
              }
            })
            .then(response => {
              if (response.ok) {
                window.location.reload();
              } else {
                this.innerHTML = originalBtnText;
                this.disabled = false;
                alert('Failed to mark as completed. Please try again.');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              this.innerHTML = originalBtnText;
              this.disabled = false;
              alert('An error occurred. Please try again.');
            });
        });
      });
    });
  </script>
</body>

</html>